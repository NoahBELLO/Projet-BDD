# docker-compose up --build
#l'installation de flask et mysql:
#pip install flask flask-mysql mysql-connector-python python-dotenv

services:
  postgresql:
    container_name: bdd_oltp
    image: postgres:17
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PostgreSql_User}
      POSTGRES_PASSWORD: ${PostgreSql_Password}
      POSTGRES_DB: ${PostgreSql_Database}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - reseau_projet

  # Clickhouse (déjà configuré pour l'API OLAP PYTHON)
  clickhouse:
    container_name: clickhouse_container
    image: clickhouse/clickhouse-server:latest
    environment:
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: root
      CLICKHOUSE_DB: default
    restart: unless-stopped
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - reseau_projet

  api_oltp:
    container_name: api_oltp
    build:
      context: ../backend/apiPostgreSql
    env_file:
      - ../backend/apiPostgreSql/environnements/.env
    volumes:
      - ../backend/apiPostgreSql:/usr/src/app
    ports:
      - 3002:3002
    depends_on:
      - postgresql
    networks:
      - reseau_projet
    command: [ "sh", "./install.sh", "bdd_oltp" ]

  # API OLAP en PYTHON
  api_olap:
    container_name: api_olap
    build:
      context: ../backend/api_olap
    environment:
      - PYTHONPATH=/usr/src/app
    env_file:
      - ../backend/api_olap/.env
    volumes:
      - ../backend/api_olap:/usr/src/app
    ports:
      - "3000:5000"
    depends_on:
      - clickhouse
    networks:
      - reseau_projet

  # API GATEWAY (NGINX)
  nginx:
    container_name: nginx-container
    image: nginx:latest
    ports:
      - "3001:3001"
    volumes:
      - ./conf.d:/etc/nginx/conf.d
    networks:
      - reseau_projet
    depends_on:
      - api_oltp
      - api_olap

  frontend:
    container_name: frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "4200:4200"
    volumes:
      - ../frontend:/usr/src/app
    networks:
      - reseau_projet
      # API Gateway (en TypeScript (TS))
      # api_gateway:
      #   container_name: api_gateway
      #   build:
      #     context: ../backend/apiGateway
      #   env_file:
      #     - ../backend/apiGateway/environnements/.env
      #   volumes:
      #     - ../backend/apiGateway:/usr/src/app
      #   ports:
      #     - 3001:3001
      #   depends_on:
      #     - api_oltp
      #     - api_olap
      #   networks:
      #     - reseau_projet
      #   command: [ "sh", "./install.sh" ]
      # API OLAP en TypeScript (TS)
      # api_olap:
      #   container_name: api_olap
      #   build:
      #     context: ../backend/apiClickHouse
      #   env_file:
      #     - ../backend/apiClickHouse/environnements/.env
      #   volumes:
      #     - ../backend/apiClickHouse:/usr/src/app
      #   ports:
      #     - 3003:3003
      #   depends_on:
      #     - clickhouse
      #   networks:
      #     - reaseau_projet
      #   command: [ "sh", "./install.sh", "bdd_olap" ]

      # BDD dans le cas MYSQL
      # mysql:
      #     container_name: mysql_container
      #     image: mysql:8.0
      #     environment:
      #       MYSQL_ROOT_PASSWORD: rootpassword
      #       MYSQL_DATABASE: my_database
      #       MYSQL_USER: my_user
      #       MYSQL_PASSWORD: my_password
      #     ports:
      #       - "3306:3306"
      #     volumes:
      #       - mysql_data:/var/lib/mysql

      # Clickhouse pour API TypeScript (TS)
      # clickhouse:
      #   container_name: bdd_olap
      #   image: clickhouse/clickhouse-server:23.8
      #   env_file:
      #     - .env
      #   environment: 
      #     CLICKHOUSE_USER: ${ClickHouse_User} 
      #     CLICKHOUSE_PASSWORD: ${ClickHouse_Password}  
      #     CLICKHOUSE_DB: ${ClickHouse_Database}
      #     CLICKHOUSE_DEFAULT_DB: ${ClickHouse_Database}
      #   restart: unless-stopped
      #   ports:
      #     - "8123:8123"
      #     - "9000:9000"
      #   volumes:
      #     - clickhouse_data:/var/lib/clickhouse
      #   networks:
      #     - reaseau_projet

      # Pour créer un network : docker network create "nom_du_reseau"
networks:
  reseau_projet:
    driver: bridge
    external: true

volumes:
  postgres_data:
  clickhouse_data: # mysql_data: # Décommente si MySQL est activé
